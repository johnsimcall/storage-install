# Author: John Call - Red Hat
---
- hosts: localhost
  become: true
  gather_facts: yes
  vars:
    vnc_display: 0
    vnc_user: root
    vnc_passwd: redhat1

  tasks:
  - set_fact:
      vnc_path: "{{ (vnc_user == 'root') | ternary('','/home') }}"

  - name: Install noVNC and TigerVNC
    yum:
      name: novnc,tigervnc-server
      enablerepo: rhel-7-server-openstack-13-rpms
      state: present
    when: ansible_distribution == "RedHat"

  - name: Install noVNC and TigerVNC
    dnf:
      name: novnc,tigervnc-server
      state: present
    when: ansible_distribution == "Fedora"

  - name: Create VNC password file
    file:
      path: "{{ vnc_path }}/{{ vnc_user }}/.vnc"
      state: directory
      owner: "{{ vnc_user }}"
      group: "{{ vnc_user }}"
      mode: 0700
  - copy:
      content: ""
      dest: "{{ vnc_path }}/{{ vnc_user }}/.vnc/passwd"
      owner: "{{ vnc_user }}"
      group: "{{ vnc_user }}"
      mode: 0600
  - shell: echo -n {{ vnc_passwd }} | vncpasswd -f > {{ vnc_path }}/{{ vnc_user }}/.vnc/passwd
    become_user: "{{ vnc_user }}"

  - name: Cleanup previous unit file - (vncserver@:{{ vnc_display }})
    systemd:
      daemon_reload: yes
      unit: vncserver@:{{ vnc_display }}
      enabled: false
      state: stopped
    ignore_errors: yes

  - name: Deploy systemd unit file for vncserver@:{{ vnc_display }}
    copy:
      content: |
        # See example at /lib/systemd/system/vncserver@.service
        [Unit]
        Description=Remote desktop service (VNC)
        After=syslog.target network.target

        [Service]
        Type=forking
        WorkingDirectory={{ vnc_path }}/{{ vnc_user }}
        User={{ vnc_user }}
        Group={{ vnc_user }}
        # Unset PIDFile to workaround SELinux issue on Fedora
        # https://github.com/TigerVNC/tigervnc/issues/606
        #PIDFile={{ vnc_path }}/{{ vnc_user }}/.vnc/%H%i.pid
        ExecStartPre=/bin/sh -c '/usr/bin/vncserver -kill %i > /dev/null 2>&1 || :'
        ExecStart=/usr/bin/vncserver -autokill %i
        ExecStop=/usr/bin/vncserver -kill %i
        Restart=on-success
        RestartSec=15

        [Install]
        WantedBy=multi-user.target
      dest: /etc/systemd/system/vncserver@:{{ vnc_display }}.service
  - systemd:
      daemon_reload: yes
      unit: vncserver@:{{ vnc_display }}
      enabled: true
      state: started

## Notes
# https://github.com/novnc/noVNC/wiki/advanced-usage
### Launch noVNC after RPM-installation
# sudo novnc_server --web /usr/share/novnc/ --vnc 127.0.0.1:5901
# http://jcall-t470s.home.lab:6080/vnc.html?host=jcall-t470s.home.lab&port=6080&password=passw0rd
#
### Install noVNC from GitHub, and launch
# git clone --single-branch --branch v1.0.0 https://github.com/novnc/noVNC.git /tmp/noVNC
# /tmp/noVNC/utils/launch.sh --web /tmp/noVNC --vnc 127.0.0.1:5901
#
### Alternative to "vncserver" -- may be useful for laptops
# x11vnc (yum install x11vnc) can be used to share your current X desktop.
# x11vnc -forever -display $DISPLAY
# x11vnc -forever -display :0
